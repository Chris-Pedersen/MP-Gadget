# vim: set ft=make:
DESTDIR ?= .

TARGETS = MP-Gadget MP-GenIC

CFLAGS = -I. -I$(DESTDIR) $(OPTIONS) $(GSL_INCL) $(HDF5_INCL) -I$(PWD)/depends/include -DH5_USE_16_API
CFLAGS += "-DLOW_PRECISION=$(LOW_PRECISION)"
CFLAGS += "-DHIGH_PRECISION=$(HIGH_PRECISION)"

BUNDLEDLIBS = -lmpsort-mpi -lradixsort -lbigfile-mpi -lbigfile -lpfft_omp -lfftw3_mpi -lfftw3_omp -lfftw3
LIBS   = -lm $(HDF_LIBS) $(GSL_LIBS) -L$(PWD)/depends/lib $(BUNDLEDLIBS) -lstdc++

OPTIONS = $(OPTIMIZE) $(OPT)

OBJECTS  =  \
	 gdbtools.o \
	 fof.o fofpetaio.o petaio.o \
	 param.o paramset.o utils-string.o \
	 domain.o allvars.o main.o \
	 blackhole.o \
	 run.o predict.o begrun.o endrun.o global.o \
	 timestep.o init.o io.o sfr_eff.o \
	 accel.o \
	 cooling.o openmpsort.o \
	 system.o allocate.o density.o \
	 treewalk.o cosmology.o \
	 gravtree.o hydra.o  driftfac.o \
	 gravpm.o \
	 forcetree.o peano.o \
	 petapm.o longrange.o mymalloc.o \
	 densitykernel.o interp.o lightcone.o walltime.o \
	 cppexample.o

ICOBJECTS   = genic-main.o genic-power.o genic-allvars.o genic-params.o \
		 petapm.o \
        paramset.o \
        utils-string.o \
		 openmpsort.o \
		genic-zeldovich.o \
		genic-save.o  \
		walltime.o \
        mymalloc.o \
        endrun.o \

INCL   = allvars.h proto.h forcetree.h cooling.h domain.h treewalk.h \
	 fof.h cosmology.h \
	 petaio.h

EXEC = $(TARGETS:%=$(DESTDIR)/%)
OBJS = $(OBJECTS:%=$(DESTDIR)/%)
ICOBJS = $(ICOBJECTS:%=$(DESTDIR)/%)
FILES = $(shell git ls-files)
all: depends $(EXEC)

.PHONY: depends

depends:
	cd depends; make

$(DESTDIR)/MP-Gadget: $(OBJS)
	$(MPICC) $(OPTIMIZE) $(OBJS) $(LIBS) -o $@

$(DESTDIR)/MP-GenIC: $(ICOBJS)
	$(MPICC) $(OPTIMIZE) $(ICOBJS) $(LIBS) -o $@

$(DESTDIR)/config.h: Makefile $(CONFIG) $(FILES)
	mkdir -p `dirname $@`
	MPICC="$(MPICC)" CFLAGS="$(CFLAGS)" OPT="$(OPT)" OPTIMIZE="$(OPTIMIZE)" bash makeconfig.sh > $@

$(DESTDIR)/%.o: %.c $(INCL)
	@echo Compiling $<; $(MPICC) -c -o $@ $(CFLAGS) $<

$(DESTDIR)/main.o: main.c $(INCL) $(DESTDIR)/config.h
	@echo Compiling $<; $(MPICC) -c -o $@ $(CFLAGS) $<

$(DESTDIR)/%.o: %.cpp $(INCL)
	@echo Compiling $<; $(CXX) -c -o $@ $(CFLAGS) $<

clean:
	rm -f $(OBJS) $(EXEC) $(ICOBJS)
